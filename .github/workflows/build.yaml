
name: Build Rust Binary

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        arch: [x64, arm64]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install Rustup Targets
        run: |
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            if [ "${{ matrix.arch }}" == "x64" ]; then
              rustup target add x86_64-apple-darwin
            elif [ "${{ matrix.arch }}" == "arm64" ]; then
              rustup target add aarch64-apple-darwin
            fi
          fi
      - name: Install cross
        run: cargo install cross
      - name: Build Binary
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            if [ "${{ matrix.arch }}" == "x64" ]; then
              cross build --release --target x86_64-unknown-linux-musl --bin rulid
            elif [ "${{ matrix.arch }}" == "arm64" ]; then
              cross build --release --target aarch64-unknown-linux-musl --bin rulid
            fi
          fi
          if [ "${{ matrix.os }}" == "macos-latest" ]; then
            if [ "${{ matrix.arch }}" == "x64" ]; then
              cargo build --release --target x86_64-apple-darwin --bin rulid
            elif [ "${{ matrix.arch }}" == "arm64" ]; then
              cargo build --release --target aarch64-apple-darwin --bin rulid
            fi
          fi
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: rulid
          path: target/${{ matrix.os }}-${{ matrix.arch }}/release/rulid
